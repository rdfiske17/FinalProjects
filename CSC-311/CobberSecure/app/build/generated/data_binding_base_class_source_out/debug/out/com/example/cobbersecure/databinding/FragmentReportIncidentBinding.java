// Generated by view binder compiler. Do not edit!
package com.example.cobbersecure.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cobbersecure.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentReportIncidentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText IncidentAddress;

  @NonNull
  public final EditText IncidentDate;

  @NonNull
  public final EditText IncidentDescription;

  @NonNull
  public final TextView IncidentReportTitle;

  @NonNull
  public final EditText IncidentTime;

  @NonNull
  public final Spinner LocationSpinner;

  @NonNull
  public final TextView LocationText;

  @NonNull
  public final RadioButton NoButton;

  @NonNull
  public final TextView ShareIncidentDescQuestion;

  @NonNull
  public final Spinner TypeOfIncidentSpinner;

  @NonNull
  public final TextView TypeOfIncidentText;

  @NonNull
  public final RadioButton YesButton;

  private FragmentReportIncidentBinding(@NonNull LinearLayout rootView,
      @NonNull EditText IncidentAddress, @NonNull EditText IncidentDate,
      @NonNull EditText IncidentDescription, @NonNull TextView IncidentReportTitle,
      @NonNull EditText IncidentTime, @NonNull Spinner LocationSpinner,
      @NonNull TextView LocationText, @NonNull RadioButton NoButton,
      @NonNull TextView ShareIncidentDescQuestion, @NonNull Spinner TypeOfIncidentSpinner,
      @NonNull TextView TypeOfIncidentText, @NonNull RadioButton YesButton) {
    this.rootView = rootView;
    this.IncidentAddress = IncidentAddress;
    this.IncidentDate = IncidentDate;
    this.IncidentDescription = IncidentDescription;
    this.IncidentReportTitle = IncidentReportTitle;
    this.IncidentTime = IncidentTime;
    this.LocationSpinner = LocationSpinner;
    this.LocationText = LocationText;
    this.NoButton = NoButton;
    this.ShareIncidentDescQuestion = ShareIncidentDescQuestion;
    this.TypeOfIncidentSpinner = TypeOfIncidentSpinner;
    this.TypeOfIncidentText = TypeOfIncidentText;
    this.YesButton = YesButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentReportIncidentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentReportIncidentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_report_incident, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentReportIncidentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.IncidentAddress;
      EditText IncidentAddress = ViewBindings.findChildViewById(rootView, id);
      if (IncidentAddress == null) {
        break missingId;
      }

      id = R.id.IncidentDate;
      EditText IncidentDate = ViewBindings.findChildViewById(rootView, id);
      if (IncidentDate == null) {
        break missingId;
      }

      id = R.id.IncidentDescription;
      EditText IncidentDescription = ViewBindings.findChildViewById(rootView, id);
      if (IncidentDescription == null) {
        break missingId;
      }

      id = R.id.IncidentReportTitle;
      TextView IncidentReportTitle = ViewBindings.findChildViewById(rootView, id);
      if (IncidentReportTitle == null) {
        break missingId;
      }

      id = R.id.IncidentTime;
      EditText IncidentTime = ViewBindings.findChildViewById(rootView, id);
      if (IncidentTime == null) {
        break missingId;
      }

      id = R.id.LocationSpinner;
      Spinner LocationSpinner = ViewBindings.findChildViewById(rootView, id);
      if (LocationSpinner == null) {
        break missingId;
      }

      id = R.id.LocationText;
      TextView LocationText = ViewBindings.findChildViewById(rootView, id);
      if (LocationText == null) {
        break missingId;
      }

      id = R.id.NoButton;
      RadioButton NoButton = ViewBindings.findChildViewById(rootView, id);
      if (NoButton == null) {
        break missingId;
      }

      id = R.id.ShareIncidentDescQuestion;
      TextView ShareIncidentDescQuestion = ViewBindings.findChildViewById(rootView, id);
      if (ShareIncidentDescQuestion == null) {
        break missingId;
      }

      id = R.id.TypeOfIncidentSpinner;
      Spinner TypeOfIncidentSpinner = ViewBindings.findChildViewById(rootView, id);
      if (TypeOfIncidentSpinner == null) {
        break missingId;
      }

      id = R.id.TypeOfIncidentText;
      TextView TypeOfIncidentText = ViewBindings.findChildViewById(rootView, id);
      if (TypeOfIncidentText == null) {
        break missingId;
      }

      id = R.id.YesButton;
      RadioButton YesButton = ViewBindings.findChildViewById(rootView, id);
      if (YesButton == null) {
        break missingId;
      }

      return new FragmentReportIncidentBinding((LinearLayout) rootView, IncidentAddress,
          IncidentDate, IncidentDescription, IncidentReportTitle, IncidentTime, LocationSpinner,
          LocationText, NoButton, ShareIncidentDescQuestion, TypeOfIncidentSpinner,
          TypeOfIncidentText, YesButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
