// Generated by view binder compiler. Do not edit!
package com.example.cobbersecure.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cobbersecure.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditFriendBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Switch allowPingSwitch;

  @NonNull
  public final Switch favoriteFriendSwitch;

  @NonNull
  public final ImageView friendImage;

  @NonNull
  public final TextView friendNameLabel;

  @NonNull
  public final Button removeFriendButton;

  private FragmentEditFriendBinding(@NonNull ConstraintLayout rootView,
      @NonNull Switch allowPingSwitch, @NonNull Switch favoriteFriendSwitch,
      @NonNull ImageView friendImage, @NonNull TextView friendNameLabel,
      @NonNull Button removeFriendButton) {
    this.rootView = rootView;
    this.allowPingSwitch = allowPingSwitch;
    this.favoriteFriendSwitch = favoriteFriendSwitch;
    this.friendImage = friendImage;
    this.friendNameLabel = friendNameLabel;
    this.removeFriendButton = removeFriendButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditFriendBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditFriendBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit_friend, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditFriendBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allow_ping_switch;
      Switch allowPingSwitch = ViewBindings.findChildViewById(rootView, id);
      if (allowPingSwitch == null) {
        break missingId;
      }

      id = R.id.favorite_friend_switch;
      Switch favoriteFriendSwitch = ViewBindings.findChildViewById(rootView, id);
      if (favoriteFriendSwitch == null) {
        break missingId;
      }

      id = R.id.friend_image;
      ImageView friendImage = ViewBindings.findChildViewById(rootView, id);
      if (friendImage == null) {
        break missingId;
      }

      id = R.id.friend_name_label;
      TextView friendNameLabel = ViewBindings.findChildViewById(rootView, id);
      if (friendNameLabel == null) {
        break missingId;
      }

      id = R.id.remove_friend_button;
      Button removeFriendButton = ViewBindings.findChildViewById(rootView, id);
      if (removeFriendButton == null) {
        break missingId;
      }

      return new FragmentEditFriendBinding((ConstraintLayout) rootView, allowPingSwitch,
          favoriteFriendSwitch, friendImage, friendNameLabel, removeFriendButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
